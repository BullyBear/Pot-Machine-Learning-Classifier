{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","name","formData","state","setState","handlePredictClick","isLoading","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","then","response","json","result","handleCancelClick","Happy","Euphoric","Uplifted","Relaxed","Creative","Energetic","Stress","Anxiety","Pain","Depression","Insomnia","Fatigue","happys","i","toFixed","push","react_default","a","createElement","key","euphorics","uplifteds","relaxeds","creatives","energetics","stresses","anxieties","pains","depressions","insomnias","fatigues","Container","className","Form","Row","Group","as","Col","Label","Control","onChange","log","Button","block","variant","disabled","onClick","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d430909f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\n\n// function Classifier() {\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      formData: {\n        Happy: 0,\n        Euphoric: 0,\n        Uplifted: 0,\n        Relaxed: 0,\n        Creative: 0,\n        Energetic: 0,\n        Stress: 0,\n        Anxiety: 0,\n        Pain: 0,\n        Depression: 0,\n        Insomnia: 0,\n        Fatigue: 0,\n      },\n      result: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  handlePredictClick = (event) => {\n    const formData = this.state.formData;\n    this.setState({ isLoading: true });\n    // fetch('http://127.0.0.1:5000/machine_learning_leafly/ml',\n    // fetch('https://www.deplorablesnowflake.org/machine_learning_leafly/ml',\n    fetch('/machine_learning_leafly/ml',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      })\n  }\n\n  handleCancelClick = (event) => {\n    this.setState({ result: \"\" });\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    const formData = this.state.formData;\n    const result = this.state.result;\n\n    var happys = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      happys.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var euphorics = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      euphorics.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var uplifteds = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      uplifteds.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var relaxeds = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      relaxeds.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var creatives = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      creatives.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var energetics = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      energetics.push(<option key = {i} value = {i}>{i}</option>);\n    }\n\n    var stresses = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      stresses.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var anxieties = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      anxieties.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var pains = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      pains.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var depressions = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      depressions.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var insomnias = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      insomnias.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var fatigues = []\n    for (var i = 0; i <= 100; i = +(i + 1).toFixed(1)) {\n      fatigues.push(<option key = {i} value = {i}>{i}</option>);\n    }\n\n\n\n    return (\n      <Container>\n        <div>\n          <h1 className=\"title\">Predict A Strain</h1>\n        </div>\n        <div className=\"content\">\n\n          <Form>\n\n            <Form.Row>\n\n              <Form.Group as={Col}>\n                <Form.Label>Happy</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Happy}\n                  name=\"Happy\"\n                  onChange={this.handleChange}>\n                  {happys}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Euphoric</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Euphoric}\n                  name=\"Euphoric\"\n                 log onChange={this.handleChange}>\n                  {euphorics}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Uplifted</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Uplifted}\n                  name=\"Uplifted\"\n                  onChange={this.handleChange}>\n                  {uplifteds}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Relaxed</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Relaxed}\n                  name=\"Relaxed\"\n                  onChange={this.handleChange}>\n                  {relaxeds}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Creative</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Creative}\n                  name=\"Creative\"\n                  onChange={this.handleChange}>\n                  {creatives}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Energetic</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Energetic}\n                  name=\"Energetic\"\n                  onChange={this.handleChange}>\n                  {energetics}\n                </Form.Control>\n              </Form.Group>\n\n            </Form.Row>\n\n            <Form.Row>\n\n              <Form.Group as={Col}>\n                <Form.Label>Stress</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Stress}\n                  name=\"Stress\"\n                  onChange={this.handleChange}>\n                  {stresses}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Anxiety</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Anxiety}\n                  name=\"Anxiety\"\n                  onChange={this.handleChange}>\n                  {anxieties}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Pain</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Pain}\n                  name=\"Pain\"\n                  onChange={this.handleChange}>\n                  {pains}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Depression</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Depression}\n                  name=\"Depression\"\n                  onChange={this.handleChange}>\n                  {depressions}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Insomnia</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Insomnia}\n                  name=\"Insomnia\"\n                  onChange={this.handleChange}>\n                  {insomnias}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label>Fatigue</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.Fatigue}\n                  name=\"Fatigue\"\n                  onChange={this.handleChange}>\n                  {fatigues}\n                </Form.Control>\n              </Form.Group>\n\n            </Form.Row>\n\n\n            <Row>\n              <Col>\n                <Button\n                  block\n                  variant=\"success\"\n                  disabled={isLoading}\n                  onClick={!isLoading ? this.handlePredictClick : null}>\n                  { isLoading ? 'Making prediction' : 'Predict' }\n                </Button>\n              </Col>\n\n            </Row>\n          </Form>\n\n\n          {result === \"\" ? null :\n            (<Row>\n              <Col className=\"result-container\">\n                <h5 id=\"result\">{result}</h5>\n              </Col>\n            </Row>)\n          }\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n// export default Classifier;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}